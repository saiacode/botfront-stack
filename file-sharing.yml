# Static Stack
# OLS Version

version: '3.8'

networks:
  private:
  mongo:
    external: true
    name: ${MONGO_NET}
  duckling:
    external: true
    name: ${DUCKLING_NET}
  ingress:
    external: true
    name: ${INGRESS_NET}

volumes:
  filebrowser_data:
  litespeed:
  rasa_data:


services:
  botfront:
    image: ${BF_IMAGE}
    deploy:
      placement:
        constraints:
          - node.labels.${NODE_LABEL} == 1 
      labels:
        - traefik.enable=true
        - traefik.docker.network=${INGRESS_NET}
        - traefik.constraint-label=${INGRESS_NET}
        - traefik.http.routers.${NAME}-http.rule=Host(`botfront.${DOMAIN}`)
        - traefik.http.routers.${NAME}-http.entrypoints=http
        - traefik.http.routers.${NAME}-http.middlewares=https-redirect
        - traefik.http.routers.${NAME}-https.rule=Host(`botfront.${DOMAIN}`)
        - traefik.http.routers.${NAME}-https.entrypoints=https
        - traefik.http.routers.${NAME}-https.tls=true
        - traefik.http.routers.${NAME}-https.tls.certresolver=le
        - traefik.http.services.${NAME}.loadbalancer.server.port=3000
    networks:
      - private
      - ingress
      - mongo
      - duckling
    volumes:
      - rasa_data:/app/models
    environment:
      - PORT=3000
      - ROOT_URL=https://botfront.${DOMAIN}
      - AUGMENTATION_FACTOR=50
      - MONGO_URL=${MONGO_URL}
      - APPLICATION_LOG_LEVEL=${BF_APPLICATION_LOG_LEVEL}
      - APPLICATION_API_LOG_LEVEL=${BF_APPLICATION_API_LOG_LEVEL}
      
      
  litespeed:
    image: ${LITESPEED_IMAGE}
    deploy:
      resources:
        limits:
          cpus: ${LITESPEED_CPU_LIMIT}
          memory: ${LITESPEED_MEMORY_LIMIT}
      replicas: ${LITESPEED_REPLICAS}
      placement:
        constraints:
          - node.labels.${NODE_LABEL} == 1
      labels:
        - traefik.enable=true
        - traefik.docker.network=${INGRESS_NET}
        - traefik.constraint-label=${INGRESS_NET}
        - traefik.http.routers.${NAME}-static-http.rule=Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)
        - traefik.http.routers.${NAME}-static-http.entrypoints=http
        - traefik.http.routers.${NAME}-static-http.middlewares=https-redirect
        - traefik.http.routers.${NAME}-static-https.rule=Host(`${DOMAIN}`) || Host(`www.${DOMAIN}`)
        - traefik.http.routers.${NAME}-static-https.entrypoints=https
        - traefik.http.routers.${NAME}-static-https.tls=true
        - traefik.http.routers.${NAME}-static-https.tls.certresolver=le
        - traefik.http.services.${NAME}-static.loadbalancer.server.port=${WEB_SERVER_PORT-80}
    volumes:
      - litespeed:/var/www/vhosts/localhost/html
    networks:
      - ingress
      
  filebrowser:
    image: ${FB_IMAGE}
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.${NODE_LABEL} == 1
      labels:
        - traefik.enable=true
        - traefik.docker.network=${INGRESS_NET}
        - traefik.constraint-label=${INGRESS_NET}
        - traefik.http.routers.${NAME}-filebrowser-http.rule=Host(`${DRIVE_DOMAIN}`) && PathPrefix(`/${NAME}`)
        - traefik.http.routers.${NAME}-filebrowser-http.entrypoints=http
        - traefik.http.routers.${NAME}-filebrowser-http.middlewares=https-redirect
        - traefik.http.routers.${NAME}-filebrowser-https.rule=Host(`${DRIVE_DOMAIN}`) && PathPrefix(`/${NAME}`)
        - traefik.http.routers.${NAME}-filebrowser-https.entrypoints=https
        - traefik.http.routers.${NAME}-filebrowser-https.tls=true
        - traefik.http.routers.${NAME}-filebrowser-https.tls.certresolver=le
        - traefik.http.services.${NAME}-filebrowser.loadbalancer.server.port=${FB_PORT-8080}
    environment:
      FB_BASEURL: "/${NAME}/"
    volumes:
      - litespeed:/data/
      - filebrowser_data:/config
    networks:
      - ingress
      
  rasa:
    image: ${RASA_IMAGE}
    deploy:
      resources:
        limits:
          cpus: ${RASA_CPU_LIMIT}
          memory: ${RASA_MEMORY_LIMIT}
        reservations:
          cpus: ${RASA_CPU_RESERVATION}
          memory: ${RASA_MEMORY_RESERVATION}
      placement:
        constraints:
          - node.labels.${NODE_LABEL} == 1 
      labels:
        - traefik.enable=true
        - traefik.docker.network=${INGRESS_NET}
        - traefik.constraint-label=${INGRESS_NET}
        - traefik.http.routers.rasa_${NAME}-http.rule=Host(`socket.${DOMAIN}`)
        - traefik.http.routers.rasa_${NAME}-http.entrypoints=http
        - traefik.http.routers.rasa_${NAME}-http.middlewares=https-redirect
        - traefik.http.routers.rasa_${NAME}-https.rule=Host(`socket.${DOMAIN}`)
        - traefik.http.routers.rasa_${NAME}-https.entrypoints=https
        - traefik.http.routers.rasa_${NAME}-https.tls=true
        - traefik.http.routers.rasa_${NAME}-https.tls.certresolver=le
        - traefik.http.services.rasa_${NAME}.loadbalancer.server.port=5005
    networks:
      - private
      - ingress
      - duckling
      #- mongo
    volumes:
      - rasa_data:/app/models
    environment:
      - BF_PROJECT_ID=${BF_PROJECT_ID}
      - BF_URL=http://botfront:3000/graphql
      - AUGMENTATION_FACTOR=50
  


    
